/*
 * ALL CSS declarations as well as @media
 * 
 * Also supported: 
 * "Label" the body{} with strings that correspond to js functions that we want to fire. 
 * A window.resize() event checks this label and functions fire when conditions are met 
 *
 * The nice part is, these labels can be strings with more than one item in them. 
 * As many JS functions that we want to fire at different widths can be controlled with these labels.
 *
 * - - -
 * Our Media Query CSS is all inline, inside the various project files. 
 * No fancy code needed here, our pe-media() mixin takes care of it. 
 */


@import "manifest";


/* http://dev.w3.org/csswg/css-device-adapt/
 * http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/
 * for IE10 Snap Mode on Metro and more.
 */
@-webkit-viewport { width: device-width; zoom: 1.0; }
   @-moz-viewport { width: device-width; zoom: 1.0; }
	@-ms-viewport { width: device-width; zoom: 1.0; }
	 @-o-viewport { width: device-width; zoom: 1.0; }
		@viewport { width: device-width; zoom: 1.0; }